import axios from 'axios';
const GITHUB_GRAPHQL_URL = 'https://api.github.com/graphql';

const ecosystemQueryMap = {
  npm: `
    query {
      securityVulnerabilities(ecosystem: "ecoSystem", first: 100, package: "packageName") {
        nodes {
          severity
          advisory {
            summary
          }
          package {
            name
            ecosystem
          }
          vulnerableVersionRange
          firstPatchedVersion {
            identifier
          }
        }
      }
    }
  `,
};

export const mapEcosystemToQuery = (ecosystem, packageName) => {
  const queryTemplate = ecosystemQueryMap[ecosystem];
  if (!queryTemplate) {
    throw new Error(`Unsupported ecosystem: ${ecosystem}`);
  }
  const query = queryTemplate.replace(/"ecoSystem"/g, `${ecosystem.toUpperCase()}`)
  .replace(/"packageName"/g, `"${packageName}"`);
  return query;
};

export const callGithubApi = async (query) => {
    try {
      const response = await axios.post(
        GITHUB_GRAPHQL_URL,
        { query: query },
        { headers: { Authorization: `Bearer ${process.env.GITHUB_ACCESS_TOKEN}` } }
      );
      return response;
    } catch (error) {
        console.error(`Error fetching vulnerabilities for ${packageName}:`, error);
        return null;
    }
};